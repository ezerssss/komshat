'use client'

import Countdown from 'react-countdown'
import useHackathon from '../hooks/useHackathon'
import { Skeleton } from '@/components/ui/skeleton'
import { useMemo } from 'react'
import { InfoIcon } from 'lucide-react'
import {
    Popover,
    PopoverContent,
    PopoverTrigger,
} from '@/components/ui/popover'

interface PropsInterface {
    hackathonID?: string
}

function Theme(props: PropsInterface) {
    const { hackathon, isLoading } = useHackathon(props.hackathonID)

    const currentDate = useMemo(() => new Date(), [])
    const isInSubmissionsPhase = useMemo(
        () => !!hackathon && hackathon.dateSubmissionEnd.toDate() > currentDate,
        [hackathon, currentDate]
    )
    const isInVotingPhase = useMemo(
        () => !!hackathon && hackathon.dateVotingEnd.toDate() > currentDate,
        [hackathon, currentDate]
    )

    const themeTitle = props.hackathonID ? (
        <h1 className="text-4xl font-bold sm:text-5xl">{hackathon?.theme}</h1>
    ) : (
        <h2 className="italic">{hackathon?.theme}</h2>
    )

    return (
        <div className="text-pretty">
            <div className="max-w-[500px]">
                <section className="mt-8">
                    {!props.hackathonID && (
                        <div className="mb-2 flex items-center gap-1">
                            <p className="text-gray-400">
                                This week&apos;s theme:
                            </p>
                            {!isLoading && (
                                <Popover>
                                    <PopoverTrigger asChild>
                                        <InfoIcon
                                            className="h-4 cursor-pointer"
                                            color="gray"
                                        />
                                    </PopoverTrigger>
                                    <PopoverContent className="w-[300px]">
                                        <p className="text-sm">
                                            This theme is automatically
                                            generated by a home-brewed custom AI
                                            API call.
                                        </p>
                                    </PopoverContent>
                                </Popover>
                            )}
                        </div>
                    )}
                    {isLoading ? (
                        <Skeleton className="h-6 w-3/4" />
                    ) : (
                        themeTitle
                    )}
                </section>
                <section className="mt-8">
                    <p className="mb-2 text-gray-400">Description:</p>
                    <h2>
                        {isLoading ? (
                            <div className="space-y-2">
                                <Skeleton className="h-6 w-full" />
                                <Skeleton className="h-6 w-full" />
                                <Skeleton className="h-6 w-1/3" />
                            </div>
                        ) : (
                            hackathon?.description
                        )}
                    </h2>
                </section>
                <section className="mt-8">
                    <p className="mb-2 text-gray-400">Suggested Ideas:</p>
                    <ul className="list-inside list-disc">
                        {isLoading ? (
                            <div className="space-y-2">
                                <Skeleton className="h-6 w-full" />
                                <Skeleton className="h-6 w-full" />
                                <Skeleton className="h-6 w-full" />
                            </div>
                        ) : (
                            hackathon?.ideas.map((idea, index) => (
                                <li key={index}>{idea}</li>
                            ))
                        )}
                    </ul>
                </section>
                <section className="mt-8 flex items-center gap-2">
                    {isLoading || !hackathon ? (
                        <Skeleton className="h-6 w-full" />
                    ) : (
                        <>
                            <p className="text-gray-400">
                                {isInSubmissionsPhase && 'Submissions until:'}
                                {isInVotingPhase &&
                                    !isInSubmissionsPhase &&
                                    'Voting until:'}
                                {!isInSubmissionsPhase &&
                                    !isInVotingPhase &&
                                    'Winner announced!'}
                            </p>
                            {isInSubmissionsPhase && (
                                <Countdown
                                    date={hackathon.dateSubmissionEnd.toDate()}
                                />
                            )}
                            {isInVotingPhase && !isInSubmissionsPhase && (
                                <Countdown
                                    date={hackathon.dateVotingEnd.toDate()}
                                />
                            )}
                        </>
                    )}
                </section>
            </div>
        </div>
    )
}

export default Theme
